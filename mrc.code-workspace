{
  "extensions": {
    // See https://go.microsoft.com/fwlink/?LinkId=827846 to learn about workspace recommendations.
    // Extension identifier format: ${publisher}.${name}. Example: vscode.csharp
    // List of extensions which should be recommended for users of this workspace.
    "recommendations": [
      "eeyore.yapf",
      "esbenp.prettier-vscode",
      "josetr.cmake-language-support-vscode",
      "llvm-vs-code-extensions.vscode-clangd",
      "matepek.vscode-catch2-test-adapter",
      "ms-python.flake8",
      "ms-python.isort",
      "ms-python.pylint",
      "ms-vscode.cmake-tools",
      "stkb.rewrap"
    ],
    // List of extensions recommended by VS Code that should not be recommended for users of this workspace.
    "unwantedRecommendations": ["austin.code-gnu-global"]
  },
  "folders": [
    {
      "path": "."
    }
  ],
  "launch": {
    "configurations": [
      {
        "MIMode": "gdb",
        "args": [],
        "cwd": "${workspaceFolder}",
        "environment": [
          {
            "name": "GLOG_v",
            "value": "10"
          }
        ],
        "externalConsole": false,
        "miDebuggerPath": "gdb",
        // This is needed to allow C++ Test Explorer to debug tests. It searches for the 1st available launch config with cppdbg
        "name": "Debug Tests Runner",
        "request": "launch",
        "setupCommands": [
          {
            "description": "Enable pretty-printing for gdb",
            "text": "-enable-pretty-printing"
          },
          {
            "description": "Skip stdio-common files",
            "text": "-interpreter-exec console \"skip -gfi **/bits/*.h\""
          }
          // {
          //     "description": "Stay on same thread when debugging",
          //     "text": "-interpreter-exec console \"set scheduler-locking step\""
          // }
        ],
        "stopAtEntry": false,
        "symbolLoadInfo": {
          "exceptionList": "libmrc*.so",
          "loadAll": false
        },
        "type": "cppdbg"
      },
      {
        "MIMode": "gdb",
        "args": [],
        "cwd": "${workspaceFolder}",
        "environment": [],
        "externalConsole": false,
        "miDebuggerPath": "gdb",
        "name": "debug test_mrc.x",
        "preLaunchTask": "C/C++: g++ build active file",
        "program": "${workspaceFolder}/build/mrc/tests/test_mrc",
        "request": "launch",
        "setupCommands": [
          {
            "description": "Enable pretty-printing for gdb",
            "ignoreFailures": true,
            "text": "-enable-pretty-printing"
          }
        ],
        "stopAtEntry": false,
        "type": "cppdbg"
      },
      {
        "MIMode": "gdb",
        "args": [],
        "cwd": "${workspaceFolder}",
        "environment": [],
        "externalConsole": false,
        "miDebuggerPath": "gdb",
        "name": "debug bench_mrc.x",
        "preLaunchTask": "C/C++: g++ build active file",
        "program": "${workspaceFolder}/build/benchmarks/bench_mrc",
        "request": "launch",
        "setupCommands": [
          {
            "description": "Enable pretty-printing for gdb",
            "ignoreFailures": true,
            "text": "-enable-pretty-printing"
          }
        ],
        "stopAtEntry": false,
        "type": "cppdbg"
      },
      {
        "MIMode": "gdb",
        "args": [
          "-m",
          "pytest",
          "-s",
          "python/tests/test_node.py::test_launch_options_source[iterator-3-1]"
        ],
        "cwd": "${workspaceFolder}",
        "environment": [
          {
            "name": "UCX_ERROR_SIGNALS",
            "value": ""
          },
          {
            "name": "GLOG_v",
            "value": "10"
          },
          {
            "name": "GLOG_logtostderr",
            "value": "1"
          }
        ],
        "externalConsole": false,
        "miDebuggerPath": "gdb",
        "name": "Debug MRC from Python",
        "program": "python",
        "request": "launch",
        "setupCommands": [
          {
            "description": "Enable pretty-printing for gdb",
            "ignoreFailures": true,
            "text": "-enable-pretty-printing"
          },
          {
            "description": "Skip stdio-common files",
            "text": "-interpreter-exec console \"skip -gfi **/bits/*.h\""
          }
        ],
        "sourceFileMap": {
          "${workspaceFolder}": {
            "editorPath": "${workspaceFolder}",
            "useForBreakpoints": "true"
          }
        },
        "stopAtEntry": false,
        "symbolLoadInfo": {
          "exceptionList": "libmrc*.so;cudf_helpers.*;executor.*;morpheus.*;node.*;options.*;pipeline.*;segment.*;subscriber.*;test_edges_cpp.*",
          "loadAll": false
        },
        "type": "cppdbg"
      },
      {
        "console": "integratedTerminal",
        "env": {
          "GLOG_logtostderr": "1",
          "GLOG_v": "10",
          "UCX_ERROR_SIGNALS": ""
        },
        "justMyCode": false,
        "name": "Python: Testing Configuration (Used by test runner in debug mode)",
        "program": "${file}",
        "purpose": ["debug-in-terminal", "debug-test"],
        "request": "launch",
        "type": "python"
      },
      {
        "name": "Run Client Tests",
        "type": "node",
        "request": "launch",
        "cwd": "${workspaceFolder}/ts/control-plane",
        "program": "./node_modules/.bin/jest",
        "args": ["./src/client/client.test.ts", "--runInBand"],
        "console": "integratedTerminal",
        "internalConsoleOptions": "neverOpen",
      }
    ],
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0"
  },
  "settings": {
    "C_Cpp.files.exclude": {
      "**/.vscode": true,
      "**/vcpkg_installed": true
    },
    "[cmake]": {
      "editor.tabSize": 2
    },
    "[cpp]": {
      "editor.defaultFormatter": "llvm-vs-code-extensions.vscode-clangd",
      "editor.detectIndentation": false,
      "editor.formatOnSave": true,
      "editor.semanticHighlighting.enabled": true,
      "editor.suggest.insertMode": "replace",
      "editor.tabSize": 4,
      "editor.wordBasedSuggestions": "off",
      "editor.wordWrapColumn": 120
    },
    "[javascript]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.formatOnSave": true,
      "editor.wordWrapColumn": 120
    },
    "[python]": {
      "editor.codeActionsOnSave": {
        "source.organizeImports": "explicit"
      },
      "editor.defaultFormatter": "eeyore.yapf",
      "editor.formatOnSave": true,
      "editor.tabSize": 4
    },
    "[typescript]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.formatOnSave": true,
      "editor.wordWrapColumn": 120
    },
    "cmake.configureArgs": [
      "-DCMAKE_MESSAGE_CONTEXT_SHOW:BOOL=ON", // Show message context by default
      "-DMRC_PYTHON_INPLACE_BUILD:BOOL=ON" // Allow inplace build for python. Use `pip install -e .` from the python folder to install
    ],
    "cmake.format.allowOptionalArgumentIndentation": true,
    "editor.rulers": [120],
    "eslint.workingDirectories": ["./ts/control-plane"],
    "files.insertFinalNewline": true,
    "files.trimTrailingWhitespace": true,
    "files.watcherExclude": {
      "**/.cache/**": true,
      "**/.git/objects/**": true,
      "**/.git/subtree-cache/**": true,
      "**/.hg/store/**": true,
      "**/node_modules/*/**": true
    },
    "flake8.args": ["--style=${workspaceFolder}/python/setup.cfg"],
    "isort.args": ["--settings-file=${workspaceFolder}/python/setup.cfg"],
    "pylint.args": ["--rcfile=${workspaceFolder}/python/.pylintrc"],
    "python.analysis.extraPaths": ["python"],
    "python.autoComplete.extraPaths": ["./python"],
    "python.testing.cwd": "${workspaceFolder}/python",
    "python.testing.pytestArgs": ["-s"],
    "python.testing.pytestEnabled": true,
    "python.testing.unittestEnabled": false,
    "testMate.cpp.debug.configTemplate": {
      "name": "Debug Test Runner (${parentLabel} > ${label})",
      "request": "launch",
      "type": "cppdbg",
      "program": "${exec}",
      "args": "${argsArray}",
      "cwd": "${cwd}",
      "env": "${envObj}",
      "environment": "${envObjArray}",
      "testMate.cpp.debug.setEnv": {
        "GLOG_v": "10",
        "GTEST_CATCH_EXCEPTIONS": "0",
        "UCX_ERROR_SIGNALS": ""
      },
      "darwin": {
        "MIMode": "lldb",
        "type": "cppdbg"
      },
      "win32": {
        "type": "cppvsdbg"
      }
    },
    "testMate.cpp.log.logpanel": true,
    "testMate.cpp.test.executables": "{build,Build,BUILD,out,Out,OUT}/**/*{test,Test,TEST}_*.x",
    "typescript.format.semicolons": "insert",
    "typescript.preferences.quoteStyle": "double",
    "typescript.referencesCodeLens.enabled": true,
    "yapf.args": ["--style=${workspaceFolder}/python/setup.cfg"],
    // "lldb.library": "/home/mdemoret/mambaforge/envs/mrc_dev2/lib/liblldb.so",
    "lldb.launch.terminal": "integrated",
    "files.associations": {
      "cctype": "cpp",
      "clocale": "cpp",
      "cmath": "cpp",
      "csignal": "cpp",
      "cstdarg": "cpp",
      "cstddef": "cpp",
      "cstdio": "cpp",
      "cstdlib": "cpp",
      "cstring": "cpp",
      "ctime": "cpp",
      "cwchar": "cpp",
      "cwctype": "cpp",
      "__nullptr": "cpp",
      "any": "cpp",
      "exception": "cpp",
      "initializer_list": "cpp",
      "new": "cpp",
      "optional": "cpp",
      "stdexcept": "cpp",
      "type_traits": "cpp",
      "typeinfo": "cpp",
      "variant": "cpp",
      "array": "cpp",
      "atomic": "cpp",
      "strstream": "cpp",
      "bit": "cpp",
      "*.tcc": "cpp",
      "bitset": "cpp",
      "charconv": "cpp",
      "chrono": "cpp",
      "cinttypes": "cpp",
      "codecvt": "cpp",
      "compare": "cpp",
      "complex": "cpp",
      "concepts": "cpp",
      "condition_variable": "cpp",
      "coroutine": "cpp",
      "cstdint": "cpp",
      "deque": "cpp",
      "forward_list": "cpp",
      "list": "cpp",
      "map": "cpp",
      "set": "cpp",
      "string": "cpp",
      "unordered_map": "cpp",
      "unordered_set": "cpp",
      "vector": "cpp",
      "algorithm": "cpp",
      "functional": "cpp",
      "iterator": "cpp",
      "memory": "cpp",
      "memory_resource": "cpp",
      "numeric": "cpp",
      "random": "cpp",
      "ratio": "cpp",
      "regex": "cpp",
      "source_location": "cpp",
      "string_view": "cpp",
      "system_error": "cpp",
      "tuple": "cpp",
      "utility": "cpp",
      "fstream": "cpp",
      "future": "cpp",
      "iomanip": "cpp",
      "iosfwd": "cpp",
      "iostream": "cpp",
      "istream": "cpp",
      "limits": "cpp",
      "mutex": "cpp",
      "numbers": "cpp",
      "ostream": "cpp",
      "ranges": "cpp",
      "semaphore": "cpp",
      "shared_mutex": "cpp",
      "span": "cpp",
      "sstream": "cpp",
      "stop_token": "cpp",
      "streambuf": "cpp",
      "thread": "cpp",
      "cfenv": "cpp",
      "typeindex": "cpp",
      "valarray": "cpp"
    }
  }
}
